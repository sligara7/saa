{
  "uaf_version": "1.2",
  "uaf_standards": {
    "dmm": "ISO/IEC 19540-1:2022",
    "uafml": "ISO/IEC 19540-2:2022"
  },
  "service_name": "Campaign Branch Manager",
  "service_id": "branch_manager",
  "hierarchical_tier": "tier_3_internal_modules",
  "component_classification": "function",
  "purpose": "Manage story branch versioning, state divergence, and merge operations for D&D campaigns using Git-like version control patterns",
  "applicable_viewpoints": [
    {
      "viewpoint": "operational",
      "concern": "Branch management workflow",
      "key_views": ["Branch Process", "Merge Operations"],
      "stakeholders": ["Game Masters", "Story Writers"]
    },
    {
      "viewpoint": "services",
      "concern": "Branch control interfaces",
      "key_views": ["Branch API", "Version Control"],
      "stakeholders": ["Service Developers", "Integration Engineers"]
    },
    {
      "viewpoint": "information",
      "concern": "Branch data management",
      "key_views": ["Branch Model", "Version Graph"],
      "stakeholders": ["Data Modelers", "Game Designers"]
    }
  ],
  "service_resource_relationships": [
    {
      "resource_type": "Branch Store",
      "relationship": "provides",
      "capability": "Branch State Persistence",
      "resource_performer": "PostgreSQL 18"
    },
    {
      "resource_type": "Version Engine",
      "relationship": "consumes",
      "capability": "Version Management",
      "resource_performer": "story_version_service"
    },
    {
      "resource_type": "Diff Engine",
      "relationship": "consumes",
      "capability": "State Difference Analysis",
      "resource_performer": "state_diff_analyzer"
    }
  ],
  "dependencies": [],
  "interfaces": [
    {
      "name": "create_branch",
      "interface_type": "http_endpoint",
      "communication_pattern": "synchronous",
      "dependency_type": "direct",
      "path": "/api/v2/campaigns/{id}/branches",
      "method": "POST",
      "description": "Create new story branch from current state",
      "auth_required": true,
      "version": "1.0",
      "implementation_status": "recommended",
      "source_verification": "Based on feature summary - Branch Management",
      "information_element_flows": [
        "data_exchange",
        "validation_result"
      ],
      "service_resource_relationship": "implements",
      "applicable_viewpoints": ["services", "information"]
    },
    {
      "name": "merge_branches",
      "interface_type": "http_endpoint",
      "communication_pattern": "synchronous",
      "dependency_type": "direct",
      "path": "/api/v2/campaigns/{id}/branches/merge",
      "method": "POST",
      "description": "Merge multiple story branches",
      "auth_required": true,
      "version": "1.0",
      "implementation_status": "recommended",
      "source_verification": "Based on feature summary - Branch Merging",
      "information_element_flows": [
        "data_exchange",
        "validation_result",
        "conflict_resolution"
      ],
      "service_resource_relationship": "implements",
      "applicable_viewpoints": ["services", "information"]
    },
    {
      "name": "branch_events",
      "interface_type": "message",
      "communication_pattern": "asynchronous",
      "dependency_type": "indirect",
      "description": "Publish branch state events to Message Hub",
      "auth_required": true,
      "version": "1.0",
      "implementation_status": "recommended",
      "source_verification": "Based on feature summary - Event System",
      "information_element_flows": [
        "event_notification",
        "status_report"
      ],
      "service_resource_relationship": "implements",
      "applicable_viewpoints": ["services", "information"]
    }
  ],
  "is_external": false,
  "parent_system": "campaign_management_system",
  "security": {
    "api_key_authentication": false,
    "ssl_tls": true,
    "additional_requirements": [
      "OAuth2 JWT via gateway",
      "RBAC",
      "Branch state validation"
    ]
  },
  "deployment": {
    "ansible_managed": true,
    "systemd_service": false,
    "python_uvicorn": true,
    "docker_container": true,
    "additional_info": {
      "fastapi": "0.118.0",
      "python": "3.13.7"
    }
  },
  "performance": {
    "expected_load": "medium",
    "scaling_strategy": "horizontal",
    "resource_requirements": {
      "branch_creation_latency": "< 200ms",
      "merge_operation_latency": "< 1s"
    }
  },
  "version": "1.0+2025-10-04",
  "source_references": {
    "documentation_links": [
      "roll20.net/compendium/dnd5e/Rules:Free Basic Rules (2024)"
    ],
    "analysis_date": "2025-10-04",
    "confidence_level": "high"
  },
  "implementation_status": "recommended",
  "verification_notes": "Internal module decomposition required for branch management complexity",
  "justification": {
    "rationale": "Dedicated branch management needed for story version control",
    "standards_reference": "UAF 1.2 Level 3 decomposition triggers - state divergence complexity",
    "best_practices_reference": "Git-like version control for story management",
    "trade_offs": "Version control overhead balanced against narrative flexibility"
  }
}