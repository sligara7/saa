{
  "registry_version": "1.0",
  "system_name": "Campaign Management System",
  "last_updated": "2025-10-04",
  "interfaces": {
    "story_engine": {
      "manage_story_state": {
        "path": "/api/v2/campaigns/{id}/story/state",
        "method": "PUT",
        "auth_required": true,
        "description": "Update and manage story state with branching support",
        "consumers": [],
        "providers": ["story_engine"],
        "status": "recommended",
        "version": "1.0"
      },
      "adapt_storyline": {
        "path": "/api/v2/campaigns/{id}/story/adapt",
        "method": "POST",
        "auth_required": true,
        "description": "Adapt storyline based on player choices and session outcomes",
        "consumers": [],
        "providers": ["story_engine"],
        "status": "recommended",
        "version": "1.0"
      },
      "story_events": {
        "type": "message",
        "pattern": "asynchronous",
        "auth_required": true,
        "description": "Publish story-related events to Message Hub",
        "consumers": [],
        "providers": ["story_engine"],
        "status": "recommended",
        "version": "1.0"
      }
    },
    "plot_generator": {
      "generate_plot": {
        "path": "/api/v2/campaigns/{id}/plot/generate",
        "method": "POST",
        "auth_required": true,
        "description": "Generate new plot elements using AI/LLM",
        "consumers": ["story_engine"],
        "providers": ["plot_generator"],
        "status": "recommended",
        "version": "1.0"
      },
      "adapt_plot": {
        "path": "/api/v2/campaigns/{id}/plot/adapt",
        "method": "POST",
        "auth_required": true,
        "description": "Adapt existing plot based on campaign state",
        "consumers": ["story_engine"],
        "providers": ["plot_generator"],
        "status": "recommended",
        "version": "1.0"
      },
      "plot_events": {
        "type": "message",
        "pattern": "asynchronous",
        "auth_required": true,
        "description": "Publish plot generation events to Message Hub",
        "consumers": [],
        "providers": ["plot_generator"],
        "status": "recommended",
        "version": "1.0"
      }
    },
    "branch_manager": {
      "create_branch": {
        "path": "/api/v2/campaigns/{id}/branches",
        "method": "POST",
        "auth_required": true,
        "description": "Create new story branch from current state",
        "consumers": ["story_engine", "plot_generator"],
        "providers": ["branch_manager"],
        "status": "recommended",
        "version": "1.0"
      },
      "merge_branches": {
        "path": "/api/v2/campaigns/{id}/branches/merge",
        "method": "POST",
        "auth_required": true,
        "description": "Merge multiple story branches",
        "consumers": ["story_engine", "plot_generator"],
        "providers": ["branch_manager"],
        "status": "recommended",
        "version": "1.0"
      },
      "branch_events": {
        "type": "message",
        "pattern": "asynchronous",
        "auth_required": true,
        "description": "Publish branch state events to Message Hub",
        "consumers": [],
        "providers": ["branch_manager"],
        "status": "recommended",
        "version": "1.0"
      }
    },
    "shared_resources": {
      "postgres_18": {
        "type": "database",
        "consumers": ["story_engine", "plot_generator", "branch_manager"],
        "access_pattern": "direct",
        "isolation_level": "service_specific_database",
        "status": "recommended"
      },
      "ai_content_generator": {
        "type": "external_service",
        "consumers": ["story_engine", "plot_generator"],
        "access_pattern": "direct",
        "coordination_required": true,
        "status": "recommended"
      },
      "message_hub": {
        "type": "message_broker",
        "consumers": [],
        "providers": ["story_engine", "plot_generator", "branch_manager"],
        "event_types": ["story_events", "plot_events", "branch_events"],
        "status": "recommended"
      }
    }
  },
  "validation_rules": {
    "interface_naming": "lowercase_with_underscores",
    "version_format": "semver",
    "required_fields": ["path", "method", "auth_required", "description", "consumers", "providers", "status", "version"],
    "valid_methods": ["GET", "POST", "PUT", "DELETE", "PATCH"],
    "valid_statuses": ["existing", "recommended", "deprecated"],
    "auth_requirements": ["all_endpoints_require_auth", "use_oauth2_jwt"]
  }
}