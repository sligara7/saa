{
  "template_version": "1.0",
  "template_description": "Standard template for service_architecture.json files based on UAF definitions",
  "service_name": "Bluesky Scientific Data Acquisition System-of-Systems",
  "service_id": "bluesky_data_acq_system",
  "hierarchical_tier": "tier_0_system_of_systems",
  "component_classification": "service",
  "purpose": "Enables remote scientific instrument control and data acquisition through a distributed architecture of interconnected services. Users can queue experiments, monitor device status, and coordinate beamline operations through web interfaces while maintaining safety and preventing conflicts.",
  "dependencies": [
    "queue_server_service",
    "device_monitoring_service", 
    "coordination_service"
  ],
  "interfaces": [
    {
      "name": "Unified Web Client Access",
      "interface_type": "architectural_constraint",
      "communication_pattern": "bidirectional",
      "dependency_type": "direct",
      "description": "Unified web client architecture that provides common access to both Queue Server and Device Monitoring services while treating them independently",
      "auth_required": true,
      "version": "1.0",
      "implementation_status": "recommended",
      "source_verification": "Recommended solution - unified user experience while maintaining service separation"
    },
    {
      "name": "Service Coordination Interface",
      "interface_type": "architectural_constraint",
      "communication_pattern": "synchronous",
      "dependency_type": "direct",
      "description": "Cross-service coordination to prevent conflicts between remote users and ensure safe beamline operation",
      "auth_required": true,
      "version": "1.0",
      "implementation_status": "recommended",
      "source_verification": "Recommended solution - coordination service prevents conflicts during plan execution"
    }
  ],
  "is_external": false,
  "parent_system": "Laboratory Automation Ecosystem",
  "security": {
    "api_key_authentication": true,
    "ssl_tls": true,
    "additional_requirements": [
      "Principle of least privilege for service accounts",
      "Secure API key authentication for all remote access",
      "SSL/TLS encryption for all HTTP(S) endpoints"
    ]
  },
  "deployment": {
    "ansible_managed": true,
    "systemd_service": true,
    "python_uvicorn": true,
    "docker_container": false,
    "additional_info": {
      "deployment_method": "Fully automated via Ansible playbooks and roles",
      "supports_clean_removal": true,
      "site_customization": "Configurable via Ansible variables"
    }
  },
  "performance": {
    "expected_load": "medium",
    "scaling_strategy": "horizontal",
    "resource_requirements": {
      "coordination_constraints": "Prevent EPICS/CA traffic through RE Worker to avoid denial-of-service",
      "safety_requirements": "Lock beamline for exclusive scan/bluesky plan execution"
    }
  },
  "version": "1.0+2025-10-02",
  "source_references": {
    "github_repo": "",
    "documentation_links": [
      "https://github.com/bluesky/bluesky-queueserver",
      "https://github.com/bluesky/bluesky-httpserver"
    ],
    "analysis_date": "2025-10-02",
    "confidence_level": "high"
  },
  "implementation_status": "existing",
  "verification_notes": "Based on actual Bluesky ecosystem analysis with new coordination service recommendations",
  "justification": {
    "rationale": "System-of-systems design enables independent development of services while guaranteeing integration through well-defined interfaces",
    "standards_reference": "UAF-based decomposition for systematic analysis",
    "best_practices_reference": "Service-oriented architecture with separation of concerns",
    "examples": "Similar to modern distributed scientific computing platforms",
    "trade_offs": "Complexity of coordination vs. flexibility and independent development"
  }
}