{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Service Architecture Schema",
  "description": "JSON Schema for validating service_architecture.json files based on UAF definitions",
  "type": "object",
  "required": [
    "service_name",
    "service_id",
    "hierarchical_tier", 
    "component_classification",
    "purpose",
    "dependencies",
    "interfaces",
    "is_external",
    "version"
  ],
  "properties": {
    "service_name": {
      "type": "string",
      "description": "Human-readable name of the service"
    },
    "service_id": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9_]*$",
      "description": "Unique identifier in lowercase with underscores"
    },
    "hierarchical_tier": {
      "type": "string",
      "enum": ["tier_0_system_of_systems", "tier_1_systems", "tier_2_components"],
      "description": "UAF-based hierarchical classification"
    },
    "component_classification": {
      "type": "string", 
      "enum": ["service", "function", "external", "interface_protocol"],
      "description": "UAF-based component type classification"
    },
    "purpose": {
      "type": "string",
      "minLength": 10,
      "description": "Clear description of the component's purpose"
    },
    "dependencies": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of service_ids this component depends on"
    },
    "interfaces": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "interface_type", "communication_pattern", "dependency_type", "description"],
        "properties": {
          "name": {
            "type": "string"
          },
          "interface_type": {
            "type": "string",
            "enum": ["http_endpoint", "message", "data_contract", "service_dependency", "auth_requirement", "cache_requirement", "storage_requirement", "architectural_constraint"]
          },
          "communication_pattern": {
            "type": "string",
            "enum": ["synchronous", "asynchronous", "bidirectional"]
          },
          "dependency_type": {
            "type": "string", 
            "enum": ["direct", "indirect", "external"]
          },
          "path": {
            "type": "string"
          },
          "method": {
            "type": "string",
            "enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS"]
          },
          "description": {
            "type": "string"
          },
          "auth_required": {
            "type": "boolean"
          },
          "version": {
            "type": "string"
          }
        }
      }
    },
    "is_external": {
      "type": "boolean",
      "description": "True for external/non-modifiable systems"
    },
    "parent_system": {
      "type": ["string", "null"],
      "description": "Name of parent system in hierarchy"
    },
    "security": {
      "type": "object"
    },
    "deployment": {
      "type": "object"
    },
    "performance": {
      "type": "object"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+(\\+\\d{4}-\\d{2}-\\d{2})?$",
      "description": "Semantic version with optional date: X.Y or X.Y+YYYY-MM-DD"
    }
  }
}