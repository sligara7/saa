{
  "uaf_version": "1.2",
  "uaf_standards": {
    "dmm": "ISO/IEC 19540-1:2022",
    "uafml": "ISO/IEC 19540-2:2022"
  },
  "service_name": "Character State Manager",
  "service_id": "character_state_manager",
  "hierarchical_tier": "tier_3_internal_modules",
  "component_classification": "function",
  "purpose": "Manage and synchronize character state transitions, ensuring consistent state across all services while maintaining D&D 5e rules compliance",
  "applicable_viewpoints": [
    {
      "viewpoint": "operational",
      "concern": "Character state lifecycle management",
      "key_views": ["State Machine", "Transition Rules"],
      "stakeholders": ["Game Engine Developers", "Rules Experts"]
    },
    {
      "viewpoint": "services",
      "concern": "State synchronization interfaces",
      "key_views": ["State API", "Event Handlers"],
      "stakeholders": ["Service Developers", "Integration Engineers"]
    },
    {
      "viewpoint": "resources",
      "concern": "State persistence and recovery",
      "key_views": ["Storage Model", "Recovery Patterns"],
      "stakeholders": ["Database Engineers", "Reliability Engineers"]
    }
  ],
  "service_resource_relationships": [
    {
      "resource_type": "State Store",
      "relationship": "provides",
      "capability": "Character State Persistence",
      "resource_performer": "PostgreSQL 18"
    },
    {
      "resource_type": "Rules Engine",
      "relationship": "consumes",
      "capability": "State Validation",
      "resource_performer": "dd5e_rules_engine"
    },
    {
      "resource_type": "Message Hub",
      "relationship": "implements",
      "capability": "State Event Distribution",
      "resource_performer": "Event Distributor"
    }
  ],
  "dependencies": [
    "evolution_engine",
    "rules_validator"
  ],
  "interfaces": [
    {
      "name": "get_character_state",
      "interface_type": "http_endpoint",
      "communication_pattern": "synchronous",
      "dependency_type": "direct",
      "path": "/api/v2/characters/{id}/state",
      "method": "GET",
      "description": "Get current character state with optional version",
      "auth_required": true,
      "version": "1.0",
      "implementation_status": "recommended",
      "source_verification": "Based on feature summary - Character State section",
      "information_element_flows": [
        "data_exchange",
        "status_report"
      ],
      "service_resource_relationship": "implements",
      "applicable_viewpoints": ["services", "resources"]
    },
    {
      "name": "update_character_state",
      "interface_type": "http_endpoint",
      "communication_pattern": "synchronous",
      "dependency_type": "direct",
      "path": "/api/v2/characters/{id}/state",
      "method": "PUT",
      "description": "Update character state with validation",
      "auth_required": true,
      "version": "1.0",
      "implementation_status": "recommended",
      "source_verification": "Based on feature summary - Character State section",
      "information_element_flows": [
        "data_exchange",
        "control_signal",
        "validation_result"
      ],
      "service_resource_relationship": "implements",
      "applicable_viewpoints": ["services", "resources"]
    },
    {
      "name": "state_change_events",
      "interface_type": "message",
      "communication_pattern": "asynchronous",
      "dependency_type": "indirect",
      "description": "Publish state change events to Message Hub",
      "auth_required": true,
      "version": "1.0",
      "implementation_status": "recommended",
      "source_verification": "Based on feature summary - Event System",
      "information_element_flows": [
        "event_notification",
        "status_report"
      ],
      "service_resource_relationship": "implements",
      "applicable_viewpoints": ["services", "resources"]
    }
  ],
  "is_external": false,
  "parent_system": "character_management_system",
  "security": {
    "api_key_authentication": false,
    "ssl_tls": true,
    "additional_requirements": [
      "OAuth2 JWT via gateway",
      "RBAC",
      "State transition validation"
    ]
  },
  "deployment": {
    "ansible_managed": true,
    "systemd_service": false,
    "python_uvicorn": true,
    "docker_container": true,
    "additional_info": {
      "fastapi": "0.118.0",
      "python": "3.13.7"
    }
  },
  "performance": {
    "expected_load": "high",
    "scaling_strategy": "horizontal",
    "resource_requirements": {
      "state_transition_latency": "< 50ms",
      "event_propagation_latency": "< 100ms"
    }
  },
  "version": "1.0+2025-10-04",
  "source_references": {
    "documentation_links": [
      "roll20.net/compendium/dnd5e/Rules:Free Basic Rules (2024)"
    ],
    "analysis_date": "2025-10-04",
    "confidence_level": "high"
  },
  "implementation_status": "recommended",
  "verification_notes": "Internal module decomposition required due to state management complexity",
  "justification": {
    "rationale": "Centralized state management needed for consistency and rules compliance",
    "standards_reference": "UAF 1.2 Level 3 decomposition triggers - complex state management",
    "best_practices_reference": "Event-driven state management with validation",
    "trade_offs": "Additional complexity balanced against guaranteed state consistency"
  }
}