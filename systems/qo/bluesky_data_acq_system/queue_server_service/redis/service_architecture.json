{
  "template_version": "1.0",
  "template_description": "Standard template for service_architecture.json files based on UAF definitions",
  "service_name": "Redis Storage",
  "service_id": "redis",
  "hierarchical_tier": "tier_2_components",
  "component_classification": "service",
  "purpose": "Persistent storage backend for queue state, plans, and metadata. Provides reliable data persistence and inter-process communication for queue operations.",
  "dependencies": [],
  "interfaces": [
    {
      "name": "Redis Data Storage",
      "interface_type": "storage_requirement",
      "communication_pattern": "synchronous",
      "dependency_type": "direct",
      "description": "Persistent storage for queue state, experiment plans, and execution metadata",
      "auth_required": false,
      "version": "1.0",
      "implementation_status": "existing",
      "source_verification": "Based on actual Redis integration in bluesky-queueserver"
    },
    {
      "name": "Redis Pub/Sub",
      "interface_type": "message",
      "communication_pattern": "asynchronous",
      "dependency_type": "direct",
      "description": "Publish/subscribe messaging for inter-process communication and notifications",
      "auth_required": false,
      "version": "1.0",
      "implementation_status": "existing",
      "source_verification": "Based on actual Redis pub/sub usage in bluesky ecosystem"
    }
  ],
  "is_external": true,
  "parent_system": "queue_server_service",
  "security": {
    "api_key_authentication": false,
    "ssl_tls": false,
    "additional_requirements": [
      "Network isolation for Redis connections",
      "Redis AUTH configuration if needed",
      "Backup and recovery procedures for queue state"
    ]
  },
  "deployment": {
    "ansible_managed": true,
    "systemd_service": true,
    "python_uvicorn": false,
    "docker_container": false,
    "additional_info": {
      "service_name": "redis systemd service",
      "configuration": "Redis configuration for persistence and performance",
      "data_directory": "Persistent storage location for Redis data files"
    }
  },
  "performance": {
    "expected_load": "medium",
    "scaling_strategy": "vertical",
    "resource_requirements": {
      "memory": "Queue state and metadata storage in memory",
      "disk": "Persistent storage for Redis RDB/AOF files",
      "availability": "High availability required for queue operations"
    }
  },
  "version": "1.0+2025-10-02",
  "source_references": {
    "github_repo": "",
    "documentation_links": [
      "https://redis.io/documentation",
      "https://redis.io/topics/persistence"
    ],
    "analysis_date": "2025-10-02",
    "confidence_level": "high"
  },
  "implementation_status": "existing",
  "verification_notes": "Based on actual Redis usage in bluesky-queueserver deployments",
  "justification": {
    "rationale": "Provides reliable persistence and messaging infrastructure for queue operations",
    "standards_reference": "Industry standard in-memory data store with persistence",
    "best_practices_reference": "Separation of application logic from data storage",
    "examples": "Standard choice for queue state management in distributed systems",
    "trade_offs": "Memory usage vs. performance and reliability benefits"
  }
}